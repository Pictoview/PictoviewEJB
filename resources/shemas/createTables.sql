DROP TABLE Users;
DROP TABLE Albums;
DROP TABLE Photos;
DROP TABLE UserInfo;
DROP TABLE AlbumAccess;
DROP TABLE AlbumTags;
DROP TABLE TagCategory;
DROP TABLE UserSubscriptions;

CREATE TABLE Users (
uid INTEGER PRIMARY KEY,
username VARCHAR(127) NOT NULL,
passkey VARCHAR(127),
role INTEGER,
points INTEGER,
status VARCHAR(10),
lastAccessed TIMESTAMP
);

CREATE TABLE UserInfo (
id INTEGER PRIMARY KEY,
uid INTEGER,
name VARCHAR(255),
gender BOOLEAN,
address VARCHAR(255),
description VARCHAR(525),
FOREIGN KEY(uid) REFERENCES Users(uid)
);

CREATE TABLE UserSubscriptions (
id INTEGER PRIMARY KEY,
uid INTEGER,
albumid INTEGER,
lastChecked TIMESTAMP,
FOREIGN KEY(uid) REFERENCES Users(uid),
FOREIGN KEY(albumid) REFERENCES Albums(id)
);

CREATE TABLE Albums (
id INTEGER PRIMARY KEY,
name VARCHAR(255) NOT NULL,
subtitle VARCHAR(255),
owner INTEGER,
parent INTEGER,
permission VARCHAR(25),
lastModifiedDate TIMESTAMP,
FOREIGN KEY(owner) REFERENCES Users(uid)
);

CREATE TABLE Photos (
id INTEGER PRIMARY KEY,
name VARCHAR(255) NOT NULL,
source VARCHAR(511) NOT NULL,
albumid INTEGER,
owner INTEGER,
lastModifiedDate TIMESTAMP,
FOREIGN KEY(albumid) REFERENCES Albums(id),
FOREIGN KEY(owner) REFERENCES Users(uid)
);

CREATE TABLE AlbumAccess (
id INTEGER PRIMARY KEY,
albumid INTEGER,
owner INTEGER,
visitor INTEGER,
FOREIGN KEY(albumid) REFERENCES Albums(id),
FOREIGN KEY(owner) REFERENCES Users(uid),
FOREIGN KEY (visitor) REFERENCES Users(uid)
);

CREATE TABLE AlbumTags (
id INTEGER PRIMARY KEY,
name VARCHAR(255),
albumid INTEGER,
cateid INTEGER,
FOREIGN KEY(albumid) REFERENCES Albums(id),
FOREIGN KEY(cateid) REFERENCES Category(id)
);

CREATE TABLE TagCategory (
id INTEGER PRIMARY KEY,
name VARCHAR(255) NOT NULL UNIQUE,
visibility VARCHAR(25)
);